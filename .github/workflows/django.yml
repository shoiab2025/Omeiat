  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    
    - name: Create stable deployment package
      run: |
        # Create a clean copy first to avoid file change issues
        mkdir -p temp_build
        rsync -av \
          --exclude='.git/' \
          --exclude='__pycache__/' \
          --exclude='*.pyc' \
          --exclude='.github/' \
          --exclude='node_modules/' \
          --exclude='*.log' \
          --exclude='deployment-package.tar.gz' \
          ./ temp_build/
        
        # Create tar from the stable copy
        cd temp_build
        tar -czf ../deployment-package.tar.gz .
        cd ..
        
        # Clean up
        rm -rf temp_build
        echo "âœ… Deployment package created successfully"
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: django-app
        path: deployment-package.tar.gz
        retention-days: 1
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: django-app
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || '22' }}
        script: |
          echo "ðŸš€ Starting deployment..."
          
          cd /var/www/Omeiat
          
          # Stop service during deployment
          sudo systemctl stop omeiat || true
          
          # Extract deployment package
          tar -xzf deployment-package.tar.gz --overwrite
          
          # Install MySQL if needed
          if ! systemctl is-active --quiet mysql; then
            sudo apt-get update
            sudo apt-get install -y mysql-server
            sudo systemctl start mysql
            sudo systemctl enable mysql
          fi
          
          source venv/bin/activate
          pip install -r requirements.txt
          mkdir -p static
          python manage.py migrate
          python manage.py collectstatic --noinput
          
          sudo systemctl daemon-reload
          sudo systemctl start omeiat
          
          rm -f deployment-package.tar.gz
          echo "âœ… Deployment completed successfully!"